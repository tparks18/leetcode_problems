# Check if Number and its double exists
# Given an array arr of integers, check if there exists two integers N and M such that N is the double of M ( i.e. N = 2 * M).
# More formally check if there exists two indices i and j such that :
# i != j
# 0 <= i, j < arr.length
# arr[i] == 2 * arr[j]
# Example 1:
# Input: arr = [10,2,5,3]
# Output: true
# Explanation: N = 10 is the double of M = 5,that is, 10 = 2 * 5.
# Example 2:
# Input: arr = [7,1,14,11]
# Output: true
# Explanation: N = 14 is the double of M = 7,that is, 14 = 2 * 7.
# Example 3:
# Input: arr = [3,1,7,11]
# Output: false

# def double_exists(arr):
#     for i in arr:
#         if i*2 in arr:
#             return True
#         else:
#             return False
#this is nsquared time

def double_exists(arr):
    dict = {}
    for i in arr:
        dict[i] = 0
        if i*2 in dict:
            return True
    return False
    
    #this is n time - better time complexity
    #using a dictionary without using any of the values
    #dictionaries have faster time complexity because of constant lookup time
    #it knows one thing and tries to find it instead of sorting through the entire list and comparing everything

double_exists([10,2,5,3])

